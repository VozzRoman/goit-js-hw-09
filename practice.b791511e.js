var formRefs=document.querySelector(".js-form"),rextArea=document.querySelector("textarea");function onSubmitCLick(e){e.preventDefault(),console.log(e.currentTarget.delay.valueAsNumber),console.log(e.currentTarget.position.value),console.log(e.currentTarget.text.value),console.log(rextArea.getAttribute("rows")),console.log(rextArea.getAttribute("cols"));for(var o=e.currentTarget.delay.valueAsNumber,t=0;t<o;t+=1)console.log("количество")}formRefs.addEventListener("submit",onSubmitCLick);var formSetTime=document.querySelector(".from-set-time"),object=document.querySelector(".oject");function onSubmitSetInterval(e){e.preventDefault();var o=2*e.currentTarget.delay.valueAsNumber;console.log(o);var t=0,r=setInterval((function(){o===t?(console.log("STOP"),clearInterval(r)):(object.classList.toggle("active"),console.log("circule")),t+=1}),2e3)}formSetTime.addEventListener("submit",onSubmitSetInterval);var isSuccess=!0,promise=new Promise((function(e,o){setTimeout((function(){isSuccess?e("Success! Value passed to resolve function"):o("Error! Error passed to reject function")}),2e3)}));console.log("Before promise.then()"),promise.then((function(e){console.log("onResolve call inside promise.then()"),console.log(e)}),(function(e){console.log("onReject call inside promise.then()"),console.log(e)}));
//# sourceMappingURL=practice.b791511e.js.map
